name: publish_to_nuget
on:
- push
- workflow_dispatch

env:
  NUGET_PACKAGE_NAME: Endjin.MetaPackage.SpecFlow

jobs:
  run_gitversion:
    runs-on: ubuntu-latest
    name: Run GitVersion
    if: |
      startsWith(github.event.ref, 'refs/tags/')
    outputs:
      semver: ${{ steps.run_gitversion.outputs.semver }}
      nugetVersion: ${{ steps.run_gitversion.outputs.nugetVersion }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: Install GitVersion
      run: |
        dotnet tool install -g GitVersion.Tool --version 5.2.4
        echo "::add-path::/github/home/.dotnet/tools"    
    - name: Run GitVersion
      id: run_gitversion
      run: |
        pwsh -noprofile -c '(dotnet-gitversion | ConvertFrom-Json).psobject.properties | % { echo ("{0}={1}`n::set-output name={0}::{1}" -f $_.name, $_.value) }'

  publish_to_nuget:
    runs-on: ubuntu-latest
    name: Publish to NuGet.org
    needs: run_gitversion
    env:
      PACKAGE_VERSION: ${{ needs.run_gitversion.outputs.nugetVersion }}
    steps:
    - uses: actions/checkout@v2

    - uses: NuGet/setup-nuget@v1.0.2
      with:
        nuget-version: 5.x

    - name: Build NuGet Package
      run: |
        nuget pack ./${{ env.NUGET_PACKAGE_NAME }}.nuspec -Version ${{ env.PACKAGE_VERSION }}

    - name: Push to NuGet.org
      run: |
        echo "Publishing: $PACKAGE_PATH"
        nuget push $PACKAGE_PATH ${{ secrets.ENDJIN_NUGET_APIKEY }}
      env:
        PACKAGE_PATH: ./${{ env.NUGET_PACKAGE_NAME }}.${{ env.PACKAGE_VERSION }}.nupkg
